@model IEnumerable<HotBug.Models.Ticket>
@using Microsoft.AspNetCore.Identity;
@using HotBug.Services.Interfaces;
@using HotBug.Models.Enums;

@inject UserManager<HBUser> UserManager
@inject IHBProjectService ProjectService


@{
    ViewData["Title"] = "All Tickets";
    HBUser hBUser = await UserManager.GetUserAsync(User);
}


<div class="card mt-2 px-4">
    <h3>
        <div class="row pt-4">
            <div class="col-6 text-dark font-weight-bold">
                Tickets
            </div>
            <div class="col-6 text-end">
                <a asp-action="Create" class="btn btn-md btn-primary text-white semibold-text btn-rounded mb-2">Create A Ticket</a>
            </div>
        </div>
    </h3>
    <div class="card">
        <div class="table-responsive country-table">

        <table class="table table-striped table-bordered mb-0 text-sm-nowrap text-lg-nowrap text-xl-nowrap">
            <thead>
                <tr class="">
                    <th class="bg-dark text-light">
                        @Html.DisplayNameFor(model => model.Title)
                    </th>
                    <th class="bg-dark text-light">
                        @Html.DisplayNameFor(model => model.Description)
                    </th>
                    <th class="bg-dark text-light">
                        @Html.DisplayNameFor(model => model.Created)
                    </th>
                    <th class="bg-dark text-light">
                        @Html.DisplayNameFor(model => model.Updated)
                    </th>
                    <th class="bg-dark text-light">
                        @Html.DisplayNameFor(model => model.Archived)
                    </th>
                    <th class="bg-dark text-light">
                        @Html.DisplayNameFor(model => model.Project)
                    </th>
                    <th class="bg-dark text-light">
                        @Html.DisplayNameFor(model => model.TicketType)
                    </th>
                    <th class="bg-dark text-light">
                        @Html.DisplayNameFor(model => model.TicketPriority)
                    </th>
                    <th class="bg-dark text-light">
                        @Html.DisplayNameFor(model => model.TicketStatus)
                    </th>
                    <th class="bg-dark text-light">
                        @Html.DisplayNameFor(model => model.OwnerUser)
                    </th>
                    <th class="bg-dark text-light">
                        @Html.DisplayNameFor(model => model.DeveloperUser)
                    </th>
                    <th class="bg-dark text-light">Edit</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.Title)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Description)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Created)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Updated)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Archived)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Project.Name)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.TicketType.Name)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.TicketPriority.Name)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.TicketStatus.Name)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.OwnerUser.FullName)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.DeveloperUser.FullName)
                        </td>
                        <td>
                            <a asp-action="Details" asp-route-id="@item.Id">Details</a>
                            @if (User.IsInRole(nameof(Roles.Admin)) || item.DeveloperUserId == hBUser.Id || item.OwnerUserId == hBUser.Id || await ProjectService.IsAssignedProjectManagerAsync(hBUser.Id, item.ProjectId))
                            {
                                <a asp-action="Edit" asp-route-id="@item.Id">Edit</a>
                            }

                            @if (User.IsInRole(nameof(Roles.Admin)) || await ProjectService.IsAssignedProjectManagerAsync(hBUser.Id, item.ProjectId))
                            {
                                if (item.Archived)
                                {
                                    <a asp-action="Restore" asp-route-id="@item.Id">Restore</a>
                                }
                                else
                                {
                                    <a asp-action="Archive" asp-route-id="@item.Id">Archive</a>
                                }

                            }
                        </td>
                    </tr>
                }
            </tbody>
        </table>

    </div>
    </div>

</div>
